// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyKhachSan.Models;

#nullable disable

namespace QuanLyKhachSan.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyKhachSan.Models.ChiTietDichVu", b =>
                {
                    b.Property<string>("MaDichVu")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnOrder(1);

                    b.Property<string>("MaDatPhong")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnOrder(2);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianDichVu")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaDichVu", "MaKhachHang", "MaDatPhong");

                    b.HasIndex("MaDatPhong");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("ChiTietDichVu");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.ChiTietPhongVatTu", b =>
                {
                    b.Property<string>("MaVatTu")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaPhong")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnOrder(1);

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaVatTu", "MaPhong");

                    b.HasIndex("MaPhong");

                    b.ToTable("ChiTietPhongVatTu");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.DanhGia", b =>
                {
                    b.Property<string>("MaDanhGia")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("BinhLuan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DiemDanhGia")
                        .HasColumnType("int");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.DatPhong", b =>
                {
                    b.Property<string>("MaDatPhong")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("HinhThucDatPhong")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("MaPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongNguoiLon")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTreEm")
                        .HasColumnType("int");

                    b.Property<int>("SoTienTraTruoc")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TongTienPhong")
                        .HasColumnType("int");

                    b.HasKey("MaDatPhong");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("MaPhong");

                    b.ToTable("DatPhong");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.DichVu", b =>
                {
                    b.Property<string>("MaDichVu")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("GiaTien")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("GioBatDauDichVu")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("GioKetThucDichVu")
                        .HasColumnType("time");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaDichVu");

                    b.ToTable("DichVu");

                    b.HasData(
                        new
                        {
                            MaDichVu = "DV001",
                            DonViTinh = "Kg",
                            GiaTien = 20000,
                            GioBatDauDichVu = new TimeSpan(0, 8, 0, 0, 0),
                            GioKetThucDichVu = new TimeSpan(0, 20, 0, 0, 0),
                            TenDichVu = "Giặt ủi",
                            TinhTrang = "Hoạt động"
                        },
                        new
                        {
                            MaDichVu = "DV002",
                            DonViTinh = "Lượt",
                            GiaTien = 200000,
                            GioBatDauDichVu = new TimeSpan(0, 6, 0, 0, 0),
                            GioKetThucDichVu = new TimeSpan(0, 22, 0, 0, 0),
                            TenDichVu = "Đưa đón sân bay",
                            TinhTrang = "Hoạt động"
                        },
                        new
                        {
                            MaDichVu = "DV003",
                            DonViTinh = "Lần",
                            GiaTien = 50000,
                            GioBatDauDichVu = new TimeSpan(0, 6, 0, 0, 0),
                            GioKetThucDichVu = new TimeSpan(0, 22, 0, 0, 0),
                            TenDichVu = "Dọn phòng",
                            TinhTrang = "Hoạt động"
                        },
                        new
                        {
                            MaDichVu = "DV004",
                            DonViTinh = "Người",
                            GiaTien = 50000,
                            GioBatDauDichVu = new TimeSpan(0, 6, 0, 0, 0),
                            GioKetThucDichVu = new TimeSpan(0, 22, 0, 0, 0),
                            TenDichVu = "Ăn sáng",
                            TinhTrang = "Hoạt động"
                        },
                        new
                        {
                            MaDichVu = "DV005",
                            DonViTinh = "Xe",
                            GiaTien = 120000,
                            GioBatDauDichVu = new TimeSpan(0, 6, 0, 0, 0),
                            GioKetThucDichVu = new TimeSpan(0, 22, 0, 0, 0),
                            TenDichVu = "Thuê xe máy",
                            TinhTrang = "Hoạt động"
                        });
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("MaDatPhong")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("SoTienThanhToan")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<int>("TongTienDichVu")
                        .HasColumnType("int");

                    b.Property<int>("TongTienPhong")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.ImageLink", b =>
                {
                    b.Property<int>("ImageLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageLinkId"));

                    b.Property<string>("MaPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageLinkId");

                    b.HasIndex("MaPhong");

                    b.ToTable("imglink");

                    b.HasData(
                        new
                        {
                            ImageLinkId = 1,
                            MaPhong = "P00001",
                            Url = "Deluxe_fomxmd_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 2,
                            MaPhong = "P00001",
                            Url = "Deluxe2_y1oap9_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 3,
                            MaPhong = "P00002",
                            Url = "Deluxe3_5wufjk_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 4,
                            MaPhong = "P00002",
                            Url = "DeluxePremium3_nbft54_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 5,
                            MaPhong = "P00003",
                            Url = "HLC-64_gr3tad_horizontal_kd7412_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 6,
                            MaPhong = "P00003",
                            Url = "HLC-65_162rzy_horizontal_68gd8e_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 7,
                            MaPhong = "P00003",
                            Url = "HLC-71_gx38pc_horizontal_atp0eq_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 8,
                            MaPhong = "P00003",
                            Url = "HLC-72_7i5du6_horizontal_4ka00z_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 9,
                            MaPhong = "P00004",
                            Url = "HLC-75_ueo7hb_horizontal_cichzd_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 10,
                            MaPhong = "P00004",
                            Url = "HLC-77_bun0l5_horizontal_7rl43c_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 11,
                            MaPhong = "P00004",
                            Url = "HLC-90_z82lws_horizontal_scaf5o_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 12,
                            MaPhong = "P00004",
                            Url = "HLC-92_g5s1jd_horizontal_2sxis1_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 13,
                            MaPhong = "P00005",
                            Url = "HLC-101_fjad9s_horizontal_v4iia9_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 14,
                            MaPhong = "P00005",
                            Url = "HLC-108_xzs4v9_horizontal_uhmq5c_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 15,
                            MaPhong = "P00005",
                            Url = "HLC-112_dv5czy_horizontal_qliyr2_horizontal.webp"
                        },
                        new
                        {
                            ImageLinkId = 16,
                            MaPhong = "P00006",
                            Url = "Phong3Deluxe1.1.JPG"
                        },
                        new
                        {
                            ImageLinkId = 17,
                            MaPhong = "P00006",
                            Url = "Phong3Deluxe1.2.JPG"
                        },
                        new
                        {
                            ImageLinkId = 18,
                            MaPhong = "P00006",
                            Url = "Phong3Deluxe1.3.JPG"
                        },
                        new
                        {
                            ImageLinkId = 19,
                            MaPhong = "P00006",
                            Url = "Phong3Deluxe1.4.JPG"
                        },
                        new
                        {
                            ImageLinkId = 20,
                            MaPhong = "P00006",
                            Url = "Phong3Deluxe1.5.JPG"
                        },
                        new
                        {
                            ImageLinkId = 21,
                            MaPhong = "P00007",
                            Url = "PhongSuiteGrand1.1.JPG"
                        },
                        new
                        {
                            ImageLinkId = 22,
                            MaPhong = "P00007",
                            Url = "PhongSuiteGrand1.2.JPG"
                        },
                        new
                        {
                            ImageLinkId = 23,
                            MaPhong = "P00007",
                            Url = "PhongSuiteGrand1.3.JPG"
                        },
                        new
                        {
                            ImageLinkId = 24,
                            MaPhong = "P00007",
                            Url = "PhongSuiteGrand1.4.JPG"
                        },
                        new
                        {
                            ImageLinkId = 25,
                            MaPhong = "P00007",
                            Url = "PhongSuiteGrand1.5.JPG"
                        },
                        new
                        {
                            ImageLinkId = 26,
                            MaPhong = "P00007",
                            Url = "PhongSuiteGrand1.6.JPG"
                        },
                        new
                        {
                            ImageLinkId = 27,
                            MaPhong = "P00008",
                            Url = "PhongSuiteExecutive1.3.JPG"
                        },
                        new
                        {
                            ImageLinkId = 28,
                            MaPhong = "P00008",
                            Url = "PhongSuiteExecutive1.1.JPG"
                        },
                        new
                        {
                            ImageLinkId = 29,
                            MaPhong = "P00008",
                            Url = "PhongSuiteExecutive1.2.JPG"
                        },
                        new
                        {
                            ImageLinkId = 30,
                            MaPhong = "P00008",
                            Url = "PhongSuiteExecutive1.4.JPG"
                        },
                        new
                        {
                            ImageLinkId = 31,
                            MaPhong = "P00008",
                            Url = "PhongSuiteExecutive1.5.JPG"
                        },
                        new
                        {
                            ImageLinkId = 32,
                            MaPhong = "P00008",
                            Url = "PhongSuite1.3.webp"
                        },
                        new
                        {
                            ImageLinkId = 33,
                            MaPhong = "P00008",
                            Url = "PhongSuite1.2.JPG"
                        },
                        new
                        {
                            ImageLinkId = 34,
                            MaPhong = "P00008",
                            Url = "PhongSuite1.4.JPG"
                        },
                        new
                        {
                            ImageLinkId = 35,
                            MaPhong = "P00008",
                            Url = "PhongSuite1.1.JPG"
                        },
                        new
                        {
                            ImageLinkId = 36,
                            MaPhong = "P00009",
                            Url = "PhongDoi1.2.JPG"
                        },
                        new
                        {
                            ImageLinkId = 37,
                            MaPhong = "P00009",
                            Url = "PhongDoi1.1.JPG"
                        },
                        new
                        {
                            ImageLinkId = 38,
                            MaPhong = "P00009",
                            Url = "PhongDoi1.3.JPG"
                        },
                        new
                        {
                            ImageLinkId = 39,
                            MaPhong = "P00009",
                            Url = "PhongDoi1.4.JPG"
                        },
                        new
                        {
                            ImageLinkId = 40,
                            MaPhong = "P00010",
                            Url = "PhongDon1.5.JPG"
                        },
                        new
                        {
                            ImageLinkId = 41,
                            MaPhong = "P00010",
                            Url = "PhongDon1.1.JPG"
                        },
                        new
                        {
                            ImageLinkId = 42,
                            MaPhong = "P00010",
                            Url = "PhongDon1.2.JPG"
                        },
                        new
                        {
                            ImageLinkId = 43,
                            MaPhong = "P00010",
                            Url = "PhongDon1.3.JPG"
                        },
                        new
                        {
                            ImageLinkId = 44,
                            MaPhong = "P00010",
                            Url = "PhongDon1.4.JPG"
                        });
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("CCCD")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHang");

                    b.HasData(
                        new
                        {
                            MaKhachHang = "KH001",
                            CCCD = "123456789012",
                            DiaChi = "123 Nguyen Van X, Quan 1, TP.HCM",
                            Email = "khachhang1@example.com",
                            GioiTinh = "Nam",
                            MatKhau = "password1",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8770),
                            NgaySinh = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "123456789",
                            TenKhachHang = "Nguyen Van X",
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaKhachHang = "KH002",
                            CCCD = "987654321098",
                            DiaChi = "456 Tran Thi Y, Quan 2, TP.HCM",
                            Email = "khachhang2@example.com",
                            GioiTinh = "Nữ",
                            MatKhau = "password2",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8773),
                            NgaySinh = new DateTime(1995, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "987654321",
                            TenKhachHang = "Tran Thi Y",
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaKhachHang = "KH003",
                            CCCD = "111223344055",
                            DiaChi = "789 Le Van Z, Quan 3, TP.HCM",
                            Email = "khachhang3@example.com",
                            GioiTinh = "Nam",
                            MatKhau = "password3",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8775),
                            NgaySinh = new DateTime(1988, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "111223344",
                            TenKhachHang = "Le Van Z",
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaKhachHang = "KH004",
                            CCCD = "555666777044",
                            DiaChi = "101 Pham Thi K, Quan 4, TP.HCM",
                            Email = "khachhang4@example.com",
                            GioiTinh = "Nữ",
                            MatKhau = "password4",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8777),
                            NgaySinh = new DateTime(1990, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "555666777",
                            TenKhachHang = "Pham Thi K",
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaKhachHang = "KH005",
                            CCCD = "999888777033",
                            DiaChi = "202 Hoang Van M, Quan 5, TP.HCM",
                            Email = "khachhang5@example.com",
                            GioiTinh = "Nam",
                            MatKhau = "password5",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8779),
                            NgaySinh = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "999888777",
                            TenKhachHang = "Hoang Van M",
                            TinhTrang = "Ngừng hoạt động"
                        });
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.LoaiPhong", b =>
                {
                    b.Property<string>("MaLoaiPhong")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("GiaPhongTheoNgay")
                        .HasColumnType("int");

                    b.Property<int>("GiaTheoGio")
                        .HasColumnType("int");

                    b.Property<int>("PhuThuTraMuon")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongNguoiLon")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTreEm")
                        .HasColumnType("int");

                    b.Property<string>("TenLoaiPhong")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaLoaiPhong");

                    b.ToTable("LoaiPhong");

                    b.HasData(
                        new
                        {
                            MaLoaiPhong = "LP0001",
                            GiaPhongTheoNgay = 100000,
                            GiaTheoGio = 50000,
                            PhuThuTraMuon = 20000,
                            SoLuongNguoiLon = 1,
                            SoLuongTreEm = 2,
                            TenLoaiPhong = "Phòng Đơn"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0002",
                            GiaPhongTheoNgay = 150000,
                            GiaTheoGio = 80000,
                            PhuThuTraMuon = 25000,
                            SoLuongNguoiLon = 2,
                            SoLuongTreEm = 3,
                            TenLoaiPhong = "Phòng Đôi"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0003",
                            GiaPhongTheoNgay = 200000,
                            GiaTheoGio = 120000,
                            PhuThuTraMuon = 30000,
                            SoLuongNguoiLon = 4,
                            SoLuongTreEm = 2,
                            TenLoaiPhong = "Phòng Gia Đình"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0004",
                            GiaPhongTheoNgay = 250000,
                            GiaTheoGio = 150000,
                            PhuThuTraMuon = 35000,
                            SoLuongNguoiLon = 3,
                            SoLuongTreEm = 1,
                            TenLoaiPhong = "Phòng Suite"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0005",
                            GiaPhongTheoNgay = 300000,
                            GiaTheoGio = 200000,
                            PhuThuTraMuon = 40000,
                            SoLuongNguoiLon = 2,
                            SoLuongTreEm = 2,
                            TenLoaiPhong = "Phòng VIP"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0006",
                            GiaPhongTheoNgay = 1000000,
                            GiaTheoGio = 500000,
                            PhuThuTraMuon = 60000,
                            SoLuongNguoiLon = 4,
                            SoLuongTreEm = 4,
                            TenLoaiPhong = "Phòng 3 Deluxe"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0007",
                            GiaPhongTheoNgay = 1000000,
                            GiaTheoGio = 600000,
                            PhuThuTraMuon = 70000,
                            SoLuongNguoiLon = 4,
                            SoLuongTreEm = 4,
                            TenLoaiPhong = "Phòng Suite Grand"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0008",
                            GiaPhongTheoNgay = 1000000,
                            GiaTheoGio = 700000,
                            PhuThuTraMuon = 60000,
                            SoLuongNguoiLon = 3,
                            SoLuongTreEm = 4,
                            TenLoaiPhong = "Phòng Suite Executive"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0009",
                            GiaPhongTheoNgay = 1300000,
                            GiaTheoGio = 900000,
                            PhuThuTraMuon = 80000,
                            SoLuongNguoiLon = 7,
                            SoLuongTreEm = 5,
                            TenLoaiPhong = "Phòng Suite Royal"
                        },
                        new
                        {
                            MaLoaiPhong = "LP0010",
                            GiaPhongTheoNgay = 1200000,
                            GiaTheoGio = 600000,
                            PhuThuTraMuon = 60000,
                            SoLuongNguoiLon = 2,
                            SoLuongTreEm = 2,
                            TenLoaiPhong = "Deluxe King Room"
                        });
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("AnhNhanVienBase64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanVien");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "NV001",
                            AnhNhanVienBase64 = "UploadImage\\profileStaff.jpg",
                            CCCD = "123456789012",
                            ChucVu = "Quản lý",
                            DiaChi = "123 Nguyen Van A, Quan 1, TP.HCM",
                            Email = "nhanvien1@example.com",
                            GioiTinh = "Nam",
                            MatKhau = "password1",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8656),
                            NgaySinh = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayVaoLam = new DateTime(2021, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8664),
                            SoDienThoai = "123456789",
                            TenNhanVien = "Nguyen Van A",
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaNhanVien = "NV002",
                            AnhNhanVienBase64 = "UploadImage\\profileStaff2.jpg",
                            CCCD = "987654321098",
                            ChucVu = "Nhân viên",
                            DiaChi = "456 Tran Thi B, Quan 2, TP.HCM",
                            Email = "nhanvien2@example.com",
                            GioiTinh = "Nữ",
                            MatKhau = "password2",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8673),
                            NgaySinh = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayVaoLam = new DateTime(2022, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8674),
                            SoDienThoai = "987654321",
                            TenNhanVien = "Tran Thi B",
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaNhanVien = "NV003",
                            AnhNhanVienBase64 = "UploadImage\\profileStaff3.jpg",
                            CCCD = "111223344055",
                            ChucVu = "Nhân viên",
                            DiaChi = "789 Le Van C, Quan 3, TP.HCM",
                            Email = "nhanvien3@example.com",
                            GioiTinh = "Nam",
                            MatKhau = "password3",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8676),
                            NgaySinh = new DateTime(1985, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayVaoLam = new DateTime(2020, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8677),
                            SoDienThoai = "111223344",
                            TenNhanVien = "Le Van C",
                            TinhTrang = "Nghỉ việc"
                        },
                        new
                        {
                            MaNhanVien = "NV004",
                            AnhNhanVienBase64 = "UploadImage\\profileStaff4.jpg",
                            CCCD = "555666777044",
                            ChucVu = "Quản lý",
                            DiaChi = "101 Pham Thi D, Quan 4, TP.HCM",
                            Email = "nhanvien4@example.com",
                            GioiTinh = "Nữ",
                            MatKhau = "password4",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8679),
                            NgaySinh = new DateTime(1988, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayVaoLam = new DateTime(2018, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8680),
                            SoDienThoai = "555666777",
                            TenNhanVien = "Pham Thi D",
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaNhanVien = "NV005",
                            AnhNhanVienBase64 = "UploadImage\\profileStaff5.webp",
                            CCCD = "999888777033",
                            ChucVu = "Nhân viên",
                            DiaChi = "202 Hoang Van E, Quan 5, TP.HCM",
                            Email = "nhanvien5@example.com",
                            GioiTinh = "Nam",
                            MatKhau = "password5",
                            NgayDangKy = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8682),
                            NgaySinh = new DateTime(1980, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayVaoLam = new DateTime(2019, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8682),
                            SoDienThoai = "999888777",
                            TenNhanVien = "Hoang Van E",
                            TinhTrang = "Đang hoạt động"
                        });
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.Phong", b =>
                {
                    b.Property<string>("MaPhong")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("MaLoaiPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaPhong");

                    b.HasIndex("MaLoaiPhong");

                    b.ToTable("Phong");

                    b.HasData(
                        new
                        {
                            MaPhong = "P00001",
                            MaLoaiPhong = "LP0001",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8816),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00002",
                            MaLoaiPhong = "LP0002",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8819),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00003",
                            MaLoaiPhong = "LP0003",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8820),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00004",
                            MaLoaiPhong = "LP0004",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8821),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00005",
                            MaLoaiPhong = "LP0005",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8822),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00006",
                            MaLoaiPhong = "LP0006",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8823),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00007",
                            MaLoaiPhong = "LP0007",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8824),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00008",
                            MaLoaiPhong = "LP0008",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8824),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00009",
                            MaLoaiPhong = "LP0001",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8825),
                            TinhTrang = "Đang hoạt động"
                        },
                        new
                        {
                            MaPhong = "P00010",
                            MaLoaiPhong = "LP0002",
                            NgayTao = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8826),
                            TinhTrang = "Đang hoạt động"
                        });
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.VatTu", b =>
                {
                    b.Property<string>("MaVatTu")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("NgayThem")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaSanXuat")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TenVatTu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TinhTrangVatTu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaVatTu");

                    b.ToTable("VatTu");

                    b.HasData(
                        new
                        {
                            MaVatTu = "VT001",
                            NgayThem = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8929),
                            NhaSanXuat = "Nội Thất Minh Nhật",
                            TenVatTu = "Giường",
                            TinhTrangVatTu = "Đang hoạt động"
                        },
                        new
                        {
                            MaVatTu = "VT002",
                            NgayThem = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8930),
                            NhaSanXuat = "Cửa Hàng Đồ Gỗ Minh Quốc",
                            TenVatTu = "Bàn",
                            TinhTrangVatTu = "Đang hoạt động"
                        },
                        new
                        {
                            MaVatTu = "VT003",
                            NgayThem = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8931),
                            NhaSanXuat = "Cửa Hàng Đồ Gỗ Minh Quốc",
                            TenVatTu = "Ghế",
                            TinhTrangVatTu = "Đang hoạt động"
                        },
                        new
                        {
                            MaVatTu = "VT004",
                            NgayThem = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8932),
                            NhaSanXuat = "Đèn trang thí Lan Anh",
                            TenVatTu = "Đèn ngủ",
                            TinhTrangVatTu = "Ngưng hoạt động"
                        },
                        new
                        {
                            MaVatTu = "VT005",
                            NgayThem = new DateTime(2023, 12, 17, 17, 44, 10, 96, DateTimeKind.Local).AddTicks(8933),
                            NhaSanXuat = "Rèm xinh Bmt",
                            TenVatTu = "Rèm",
                            TinhTrangVatTu = "Đang hoạt động"
                        });
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.ChiTietDichVu", b =>
                {
                    b.HasOne("QuanLyKhachSan.Models.DatPhong", "DatPhong")
                        .WithMany("ChiTietDichVu")
                        .HasForeignKey("MaDatPhong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuanLyKhachSan.Models.DichVu", "DichVu")
                        .WithMany()
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhachSan.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhachSan.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("DatPhong");

                    b.Navigation("DichVu");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.ChiTietPhongVatTu", b =>
                {
                    b.HasOne("QuanLyKhachSan.Models.Phong", "Phong")
                        .WithMany()
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhachSan.Models.VatTu", "VatTu")
                        .WithMany()
                        .HasForeignKey("MaVatTu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phong");

                    b.Navigation("VatTu");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.DanhGia", b =>
                {
                    b.HasOne("QuanLyKhachSan.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.DatPhong", b =>
                {
                    b.HasOne("QuanLyKhachSan.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhachSan.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNhanVien");

                    b.HasOne("QuanLyKhachSan.Models.Phong", "Phong")
                        .WithMany()
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");

                    b.Navigation("Phong");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.HoaDon", b =>
                {
                    b.HasOne("QuanLyKhachSan.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.ImageLink", b =>
                {
                    b.HasOne("QuanLyKhachSan.Models.Phong", "Phong")
                        .WithMany("ImageLinks")
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phong");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.Phong", b =>
                {
                    b.HasOne("QuanLyKhachSan.Models.LoaiPhong", "LoaiPhong")
                        .WithMany()
                        .HasForeignKey("MaLoaiPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiPhong");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.DatPhong", b =>
                {
                    b.Navigation("ChiTietDichVu");
                });

            modelBuilder.Entity("QuanLyKhachSan.Models.Phong", b =>
                {
                    b.Navigation("ImageLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
